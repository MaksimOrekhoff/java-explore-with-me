CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255)                            NOT NULL,
    email VARCHAR(512)                            NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                           NOT NULL,
    constraint pk_categories primary key (id),
    CONSTRAINT UQ_CATEGORIES_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat bigint,
    lon bigint,
    constraint pk_locations primary key (id)
);

CREATE TABLE IF NOT EXISTS events
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR(500)                     NOT NULL,
    category_id bigint,
    confirmed_Requests int,
    created_On TIMESTAMP WITHOUT TIME ZONE       NOT NULL,
    description VARCHAR(4000)                   NOT NULL,
    event_Date TIMESTAMP WITHOUT TIME ZONE       NOT NULL,
    initiator_id bigint,
    location_id bigint,
    paid boolean                                NOT NULL,
    participant_Limit bigint,
    published_On TIMESTAMP WITHOUT TIME ZONE,
    request_Moderation boolean,
    state_event VARCHAR(100),
    title VARCHAR(4000)                         NOT NULL,
    views int,
    constraint pk_events primary key (id),
    constraint FK_EVENT_OWNER FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE,
    constraint FK_LOCATION FOREIGN KEY (location_id) REFERENCES locations (id) ON DELETE CASCADE,
    constraint FK_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE       NOT NULL,
    event_id bigint,
    requester_id bigint,
    state VARCHAR(100),
    constraint pk_requests primary key (id),
    constraint FK_requests FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT UQ_event_id_requester_id UNIQUE (event_id, requester_id)
);







